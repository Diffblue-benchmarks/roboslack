buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url  "http://palantir.bintray.com/releases"
        }
    }

    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:${junitPlatformVersion}"
        classpath "gradle.plugin.org.inferred:gradle-processors:${gradleProcessorsVersion}"
        classpath "com.palantir.baseline:gradle-baseline-java:${baselineVersion}"
        classpath "com.palantir.gradle.gitversion:gradle-git-version:${gitVersionVersion}"
        classpath "gradle.plugin.com.palantir.configurationresolver:gradle-configuration-resolver-plugin:${configurationResolverVersion}"
        classpath "com.netflix.nebula:nebula-publishing-plugin:${nebulaPublishingPluginVersion}"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${bintrayPluginVersion}"
    }
}

// Palantir Baseline
apply plugin: 'com.palantir.baseline-config'
apply plugin: 'com.palantir.baseline-idea'
dependencies {
    baseline "com.palantir.baseline:gradle-baseline-java-config:${baselineVersion}@zip"
}

apply plugin: 'com.palantir.git-version'

allprojects {
    group 'com.palantir.roboslack'
    version System.env.CIRCLE_TAG ?: gitVersion()
}

subprojects {

    // Ignore warnings on generated code
    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-XepDisableWarningsInGeneratedCode']
    }

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url  "http://palantir.bintray.com/releases"
        }
    }

    if (System.env.CIRCLE_TEST_REPORTS) {
        test.reports.junitXml.destination = new File(System.env.CIRCLE_TEST_REPORTS, it.getName())
    }
}
